body {
    background: var(--gradient-expresso);

    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

:root {
    --item-size: 80vw;
    --gap: 2vw;

    @media (width >= 500px) {
        --item-size: 50vw;
        --gap: 5vw;
    }
    @media (width >= 680px) {
        --item-size: 28vw;
    }
    @media (width >= 1200px) {
        --item-size: 24vw;
    }
    @media (width >= 1400px) {
        --item-size: 18vw;
    }
    @media (width >= 1800px) {
        --item-size: 14vw;
    }
}

.timeline {
    position: relative;
    display: flex;
    gap: var(--gap);
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    width: 100%;
    min-height: 100vh;

    /* Aligns article center with padding either side */
    padding-inline: calc((100vw - var(--item-size)) / 2);

    & article {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        flex: 0 0 var(--item-size);
        padding: 2vh 0;
        width: var(--item-size);

        /* styles connected to scroll (reveal) animation */
        scroll-snap-align: center;
        scroll-snap-stop: always;
        /* Connect animation to keyframe */
        animation: reveal linear both;
        /* 
        - Associate progress of animation with view() css function
        - The scrollbar on the inline axis of the scroll container
        */
        animation-timeline: view(inline);

        & div {
            width: 100%;
            background: var(--color-black);
            color: var(--color-white);
            margin-top: -1px;
            padding: 16px;
            border-radius: 0 0 20px 20px;
            z-index: -1;
            box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;

            /* Connect animation to keyframe */
            animation: info linear both;
            /* 
            - Associate progress of animation with view() css function
            - The scrollbar on the inline axis of the scroll container
            */
            animation-timeline: view(inline);

            & h2 {
                margin-top: 0;
            }
        }

        & img {
            display: block;
            line-height: 1;
            width: 100%;
            /*   aspect-ratio: 1; */
            object-fit: cover;
            box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;

            /* Connect animation to keyframe */
            animation: imageEnter linear both;
            /* 
            - Associate progress of animation with view() css function
            - The scrollbar on the inline axis of the scroll container
            */
            animation-timeline: view(inline);
        }
    }
}

@keyframes reveal {
    0%,
    100% {
        translate: 0 -25%;
        opacity: 0.2;
        scale: 0.7;
    }
    50% {
        translate: 0;
        opacity: 1;
        scale: 1;
    }
}

/* 
We created a centered horizontal scroll snap and added a “reveal” animation to the parent scroll in the inline axis. The animation itself will place the article to its “active” state at 50%, which will be the 50% of its scroll distance and also the place where it snaps.
*/

/* Reveal text info (div) underneath img */
@keyframes info {
    0%,
    40%,
    60%,
    100% {
        opacity: 0;
        transform: translateY(-100%);
    }
    50% {
        opacity: 1;
        transform: translateY(0%);
    }
}

/* Rotation of article dependent on scroll */
@keyframes imageEnter {
    0% {
        scale: 0.2;
        rotate: 70deg;
        border-radius: 0;
    }

    40%,
    60% {
        scale: 1;
        rotate: 0deg;
        border-radius: 20px 20px 0 0;
    }
    100% {
        scale: 0.2;
        rotate: -70deg;
        border-radius: 0;
    }
}

.timeline::-webkit-scrollbar {
    width: 5px;
    height: 2rem;
}
.timeline::-webkit-scrollbar-track {
    background: var(--color-black);
}
.timeline::-webkit-scrollbar-thumb {
    background: var(--color-white);
}
.timeline::-webkit-scrollbar-thumb:hover {
    background: var(--color-gray-light);
}
