/* 
--------------------------------------------------------
FOUNDATION
--------------------------------------------------------
*/
body {
    background-image: var(--gr-witch);
}

/* 
--------------------------------------------------------
MEDIA
--------------------------------------------------------
*/
.layout__media {
    position: relative;
}

.media-scroller,
.media-group {
    display: grid;
    gap: 0.4rem;
    grid-auto-flow: column;
}

.media-scroller {
    overflow-x: hidden;
    scroll-behavior: smooth;
    grid-auto-columns: 100%;
    padding: 0 3rem;
    scroll-padding-inline: 3rem;
}

.media-group {
    grid-auto-columns: 1fr;
    /* border: solid 3px limegreen; */
}

.media-element {
    border-radius: var(--br-sm);
    overflow: hidden;
}

.media-element > img {
    width: 100%;
    aspect-ratio: 16 / 9;
    object-fit: cover;
}

/* 
--------------------------------------------------------
Scroll navigation Buttons
--------------------------------------------------------
*/

/* 
- buttons set to display:none
- we only show the arrows when they are the current target
- when when the id of the media-group is displayed, only its next and previous are displayed
*/
.next,
.previous {
    display: none;
    position: absolute;
    z-index: 10;
    width: 4rem;
    background: rgba(0, 0, 0, 0);
    padding: 0 1rem;
    opacity: 0;
}

.next {
    right: 0;
    top: 0;
    bottom: 0;
}
.previous {
    left: 0;
    top: 0;
    bottom: 0;
}

.media-group:first-child :where(.next, .previous) {
    display: flex;
}

/* hover on scroller, buttons appear */
.media-scroller:hover :where(.next, .previous) {
    opacity: 1;
}

/* hover button themselves background appears */
:where(.next, .previous):hover {
    background: rgba(0, 0, 0, 0.3);
}

/* default scale transform for button svg */
:where(.next, .previous) > svg {
    transition: transform 75ms linear;
    transform: scale(1);
}
/* buttons on hover scale transform */
:where(.next, .previous):hover > svg {
    transform: scale(1.5);
}

/*
display navigation buttons when within target 
Target is the id on .media-group 
*/
.media-group:target :where(.next, .previous) {
    display: flex;
}

/* 
- display this class first on page load next button when no target id 
- there is no target ID because the user hasn't clicked next to go to a target
*/
.media-scroller:has(:target:not(:first-child))
    .media-group:first-of-type
    .next {
    display: none;
}

/* 
--------------------------------------------------------
Navigation indicators
--------------------------------------------------------
*/

/* hidden by default */
.navigation-indicators {
    opacity: 0;
    position: absolute;
    display: flex;
    gap: var(--sp-1);

    top: -1rem;
    right: 2rem;
}

.navigation-indicators > * {
    width: 1rem;
    height: 2px;
    background: white;
    opacity: 0.5;
}

/* When visible (hover) display at 50% opacity, unless... */
.media-scroller:has(.media-group:target)
    .navigation-indicators
    > *:nth-child(1) {
    opacity: 0.5;
}

/* Opacity 100% when in the relevant target section */
.navigation-indicators > *:nth-child(1),
.media-group:nth-child(1):target ~ .navigation-indicators > *:nth-child(1) {
    opacity: 1;
}

.media-group:nth-child(2):target ~ .navigation-indicators > *:nth-child(2) {
    opacity: 1;
}

.media-group:nth-child(3):target ~ .navigation-indicators > *:nth-child(3) {
    opacity: 1;
}

.media-group:nth-child(4):target ~ .navigation-indicators > *:nth-child(4) {
    opacity: 1;
}

.media-scroller:hover .navigation-indicators {
    opacity: 1;
}
